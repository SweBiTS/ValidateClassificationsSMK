# ==================================================== #
# --- Run configuration - Validate Classifications --- #
# ==================================================== #

############################
# --- General Settings --- #
############################

# --- Log level --- #
LOG_LEVEL: "INFO"   # Logging verbosity: {DEBUG, INFO, WARNING, ERROR, CRITICAL}

# --- Workflow Mode --- #
# false: only map reads (map.smk).
# true: run the validation steps (simulation_validation.smk)
RUN_VALIDATION: true  # {true, false}

# --- Input File Patterns & Specifications --- #
# Change these as needed
FASTQ_FILE_PATTERN: "fastq/taxID-{tax_id}_R{direction}.fq.gz"           # Pattern for input FASTQ files
MAPPING_SPECIFICATION: "supporting_files/mapping_specification.yaml"    # File mapping tax IDs to genome files

# --- Tool Parameters --- #
# BBMap specific settings
BBMAP_MINID: 0.97               # Minimum identity for mapping
BBMAP_AMBIGUOUS: "toss"         # How to handle ambiguous mappings {best, toss, random, all}
BBMAP_PAIREDONLY: "t"           # Treat unpaired reads as unmapped {t, f}

# pIRS specific settings
SIMULATION_COVERAGE: 10  # Coverage for pIRS simulation

# Kraken 2 specific settings
# Path to the Kraken 2 database used in the validation step, needs to contain 
# a taxonomy directory with names.dmp and nodes.dmp
KRAKEN2_DB_PATH: "kraken_db/test_db"
# Confidence threshold for Kraken 2 classification
KRAKEN2_CONFIDENCE: 0.1
# Minimum number of minimizer hit groups required for classification
KRAKEN2_MINIMUM_NUM_HIT_GROUPS: 10
# Optional: Path to directory containing kraken2 and k2mask executables.
# If null or commented out, executables are assumed to be in PATH (via conda).
KRAKEN2_BIN_DIR: "../../bin/kraken2_SweBiTS_v2.1.3"


# --- Resource Configurations ---
# These are used directly by the rules (and passed to SLURM)

# BBMap Index Resources
BBMAP_INDEX_MEM: "8g"  # Referenced by bbmap_index rule in map.smk
BBMAP_INDEX_MEM_MB: 8000
BBMAP_INDEX_THREADS: 4
BBMAP_INDEX_RUNTIME: "1h"

# BBMap Map Reads Resources
BBMAP_MAP_MEM: "8g"
BBMAP_MAP_MEM_MB: 8000
BBMAP_MAP_THREADS: 8
BBMAP_MAP_RUNTIME: "24h"

# Samtools Sort Resources
SAMTOOLS_SORT_THREADS: 2
SAMTOOLS_SORT_MEM_PER_THREAD: "2G"
SAMTOOLS_SORT_MEM_PER_THREAD_MB: 2048 # Keep for SLURM calculation
SAMTOOLS_SORT_RUNTIME: "2h"

# Sambamba Markdup Resources
SAMBAMBA_MARKDUP_THREADS: 8
SAMBAMBA_MARKDUP_MEM_MB: 8000
SAMBAMBA_MARKDUP_RUNTIME: "2h"

# Check Real Read Coverage Resources
CHECK_COVERAGE_THREADS: 1
CHECK_COVERAGE_MEM_MB: 1000
CHECK_COVERAGE_RUNTIME: "10m"

# Samtools Stats Resources
SAMTOOLS_STATS_MEM_MB: 1000
SAMTOOLS_STATS_RUNTIME: "15m"
SAMTOOLS_STATS_THREADS: 1

# pIRS Simulation Resources
PIRS_SIM_MEM_MB: 4000
PIRS_SIM_RUNTIME: "12h"
PIRS_SIM_THREADS: 4

# Rewrite FASTQ Headers Resources (Python script)
REWRITE_HEADERS_THREADS: 1
REWRITE_HEADERS_MEM_MB: 1000
REWRITE_HEADERS_RUNTIME: "60m"

# Concatenate FASTQ Resources (cat)
AGGREGATE_FASTQ_THREADS: 2
AGGREGATE_FASTQ_MEM_MB: 2000
AGGREGATE_FASTQ_RUNTIME: "60m"

# Kraken 2 Resources
KRAKEN2_THREADS: 16
KRAKEN2_MEM_MB: 8000
KRAKEN2_RUNTIME: "30m"

# Split Kraken Output Resources (Python script)
SPLIT_KRAKEN_THREADS: 1
SPLIT_KRAKEN_MEM_MB: 2000
SPLIT_KRAKEN_RUNTIME: "60m"

# selmeout.py (Extract IDs) Resources
EXTRACT_IDS_THREADS: 1
EXTRACT_IDS_MEM_MB: 3000
EXTRACT_IDS_RUNTIME: "60m"

# seqtk subseq (Filtering FASTQ) Resources
SEQTK_THREADS: 1
SEQTK_MEM_MB: 2000
SEQTK_RUNTIME: "60m"

# Bedtools GenomeCov/Merge Resources (calculate_simulated_coverage)
CALC_SIM_COV_THREADS: 1
CALC_SIM_COV_MEM_MB: 2000
CALC_SIM_COV_RUNTIME: "30m"

# Resources for k2mask (rule: find_masked_regions)
K2MASK_THREADS: 1
K2MASK_MEM_MB: 2000
K2MASK_RUNTIME: "60m"

# Bedtools Subtract Resources (rule: define_classifiable_regions)
BEDTOOLS_SUBTRACT_THREADS: 1
BEDTOOLS_SUBTRACT_MEM_MB: 2000
BEDTOOLS_SUBTRACT_RUNTIME: "15m"

# Sort Classifiable BED file Resources
SORT_BED_THREADS: 1
SORT_BED_MEM_MB: 1000
SORT_BED_RUNTIME: "15m"

# Create Genome File Resources
# Rule: create_genome_file
# awk one-liner that parses the reference sequence
CREATE_GENOME_FILE_THREADS: 1
CREATE_GENOME_FILE_MEM_MB: 1000
CREATE_GENOME_FILE_RUNTIME: "15m"

# Bedtools Intersect (find real reads overlapping classifiable 
# regions, rule: intersect_real_reads_with_classifiable_regions) Resources
INTERSECT_READS_THREADS: 1
INTERSECT_READS_MEM_MB: 2000
INTERSECT_READS_RUNTIME: "30m"

# Summarize Coverage of Classifiable Regions 
# (rule: summarize_validation_coverage) Resources
SUMMARIZE_VALIDATION_THREADS: 1
SUMMARIZE_VALIDATION_MEM_MB: 2000
SUMMARIZE_VALIDATION_RUNTIME: "20m"

# Plotting Resources
PLOT_THREADS: 1
PLOT_MEM_MB: 1000
PLOT_RUNTIME: "15m"
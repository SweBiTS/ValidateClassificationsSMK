##############################################
# Run configuration - Validate Classifications
##############################################

# --- General Settings ---
LOG_LEVEL: "INFO"   # Logging verbosity: {DEBUG, INFO, WARNING, ERROR, CRITICAL}

# --- Directory Paths (relative to Snakefile location) ---
# Should be static unless project structure changes
INPUT_DIR: "input"
OUTPUT_DIR: "output"
LOG_DIR: "logs"
GENOMES_DIR: "supporting_files/genomes"               # Directory containing the genomes to map against
INDEX_DIR_BBMAP: "bbmap_indices"                      # Subdirectory within 'outdir' for BBMap indexes
ENVS_DIR: "envs"

# --- Input File Patterns & Specifications ---
# Change these as needed
FASTQ_FILE_PATTERN: "fastq/taxID-{tax_id}_R{direction}.fq.gz"           # Pattern for input FASTQ files
MAPPING_SPECIFICATION: "supporting_files/mapping_specification.yaml"    # File mapping tax IDs to genome files

# --- Tool Parameters ---
# BBMap specific settings
BBMAP_MINID: 0.97               # Minimum identity for mapping
BBMAP_AMBIGUOUS: "toss"         # How to handle ambiguous mappings {best, toss, random, all}
BBMAP_PAIREDONLY: "t"           # Treat unpaired reads as unmapped {t, f}

# Optional: Add resource configurations if needed
BBMAP_INDEX_MEM: "4g"
# bbmap_index_threads: 8
BBMAP_MAP_MEM: "4g"
# bbmap_map_threads: 8

# ##############################################
# # Run configuration - Validate Classifications
# ##############################################

# # Should be static
# inputdir: "input"
# outdir: "output"
# logdir: "logs"
# genomesdir: "supporting_files/genomes"                            # Directory containing the genomes to map against
# indexdir: "ref"                                                   # Directory to build the genome indexes in

# # Change these as needed
# fastq_file_pattern: "fastq/taxID-{tax_id}_R{direction}}.fq.gz"    # The pattern of the fastq files that hold the reads that we should map
# mapping_spec: "supporting_files/mapping_specification.yaml"       # File mapping which tax IDs to map against which genomes
# bbmap_minid: 0.97                                                 # Minimum identity for mapping
# bbmap_ambiguous: "toss"                                           # How to handle ambiguous mappings {best, toss, random, all}
# bbmap_pairedonly: "t"                                             # Treat unpaired reads as unmapped {t, f}

# # mode: clade                                                       # Choose between {single, clade}. 
# #                                                                   # Single: extract reads hitting exactly the specified tax ID(s).
# #                                                                   # Clade: extract all reads hitting any taxa in the clade rooted at the specified tax ID(s)
# # taxonomy_names: "supporting_files/names.dmp"                      # Taxonomy names.dmp files (use the same as used for the Kraken 2 classification)
# # taxonomy_nodes: "supporting_files/nodes.dmp"                      # Taxonomy nodes.dmp files (use the same as used for the Kraken 2 classification)